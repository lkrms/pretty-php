name: CI

on:
  push:
    branches:
      - main

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none

      # Add a version constraint before using this elsewhere, e.g. "lkrms/pretty-php=0.4.18"
      - name: Install PrettyPHP
        run: composer create-project --no-interaction --no-progress --no-dev lkrms/pretty-php build/pretty-php

      - name: Run PrettyPHP
        run: build/pretty-php/bin/pretty-php --diff

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none

      - name: Install dependencies
        run: composer install --no-interaction --no-progress

      - name: Run PHPStan
        run: vendor/bin/phpstan

  unit-tests:
    name: PHPUnit tests

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php-version:
          - "8.2"
        include:
          - os: ubuntu-latest
            php-version: "8.1"
          - os: ubuntu-latest
            php-version: "8.0"
          - os: ubuntu-latest
            php-version: "7.4"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: none, dom, json, mbstring, openssl, tokenizer, xml, xmlwriter
          coverage: pcov

      - name: Install dependencies
        run: composer install --no-interaction --no-progress

      - name: Run PHPUnit tests and generate code coverage report
        run: php -dshort_open_tag=On vendor/bin/phpunit --no-coverage --coverage-clover=coverage.xml

      - name: Upload code coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build phar
    needs:
      - phpstan
      - unit-tests
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.run-build-script.outputs.artifact_name }}
      artifact_path: ${{ steps.run-build-script.outputs.artifact_path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none

      - name: Install dependencies
        run: composer install --no-interaction --no-progress

      - name: Run build script
        id: run-build-script
        run: |
          scripts/build.sh
          jq -r '{"artifact_name":.package,"artifact_path":.assets[]|select(.type=="phar")|.path}|to_entries[]|"\(.key)=\(.value)"' build/dist/manifest.json | tee -a "$GITHUB_OUTPUT" >>"$GITHUB_ENV"

      - name: Upload phar artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}-snapshot-phar
          path: build/dist/${{ env.artifact_path }}

  test-phar:
    name: Test phar
    needs:
      - build

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php-version:
          - "8.2"
        include:
          - os: ubuntu-latest
            php-version: "8.1"
          - os: ubuntu-latest
            php-version: "8.0"
          - os: ubuntu-latest
            php-version: "7.4"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: none, json, mbstring, tokenizer
          coverage: none

      - name: Download phar artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact_name }}-snapshot-phar

      - name: Run PrettyPHP
        env:
          artifact_path: ${{ needs.build.outputs.artifact_path }}
        run: php "$artifact_path" --verbose
        shell: bash

  integration-tests:
    name: Integration tests
    needs:
      - build
      - test-phar
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        repository:
          - laravel/framework
        args:
          - --include-if-php --preset laravel src tests bin
        include:
          - repository: symfony/symfony
            args: --include-if-php --preset symfony .
          - repository: WordPress/WordPress
            args: --include-if-php --preset wordpress .

    steps:
      - name: Checkout ${{ matrix.repository }}
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repository }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: none, json, mbstring, tokenizer
          coverage: none

      - name: Download phar artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact_name }}-snapshot-phar

      - name: Run PrettyPHP
        env:
          artifact_path: ${{ needs.build.outputs.artifact_path }}
        run: |
          php "$artifact_path" --print-config ${{ matrix.args }} | tee .prettyphp
          php "$artifact_path" || { status=$? && [[ $status -eq 2 ]] || (exit $status); }
